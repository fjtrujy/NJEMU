name: PSP CMAKE

on:
  push:
    branches: 
      - '*'
    tags:
      - v*
  pull_request:
  repository_dispatch:
    types: [run_build]
  workflow_dispatch: {}

jobs:
  build:
    name: ${{ matrix.target }} LARGE_MEMORY=${{ matrix.large_memory }} COMMAND_LIST=${{ matrix.command_list }} ADHOC=${{ matrix.adhoc }} SAVE_STATE=${{ matrix.save_state }} NO_GUI=${{ matrix.no_gui }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [MVS, NCDZ] #TOOD: CPS1, CPS2
        large_memory: [ON, OFF]
        command_list: [OFF] #TODO: ON
        adhoc: [OFF] #TODO: ON
        save_state: [OFF] #TODO: OFF
        no_gui: [ON] #TODO: OFF
        exclude:
          - target: NCDZ
            adhoc: ON
          - adhoc: ON
            save_state: FALSE
      fail-fast: false

    container: pspdev/pspdev:latest
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        apk add build-base git bash
    

    - name: Compile project
      run: |
        mkdir build
        cd build
        cmake -DPLATFORM="PSP" \
          -DCMAKE_TOOLCHAIN_FILE=$PSPDEV/psp/share/pspdev.cmake \
          -DTARGET="${{ matrix.target }}" \
          -DLARGE_MEMORY=${{ matrix.large_memory }} \
          -DCOMMAND_LIST=${{ matrix.command_list }} \
          -DADHOC=${{ matrix.adhoc }} \
          -DSAVE_STATE=${{ matrix.save_state }} \
          ..
        make -j $(getconf _NPROCESSORS_ONLN)

    - name: Get short SHA
      id: slug
      run: echo "sha8=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_OUTPUT

    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v4
      with:
        name: NJEMU-${{ steps.slug.outputs.sha8 }}-${{ matrix.target }}-large_memory_${{ matrix.large_memory }}-command_list_${{ matrix.command_list }}-adhoc_${{ matrix.adhoc }}-save_state${{ matrix.save_state }}
        path: |
          build/*.PBP