name: Computer

on:
  push:
    branches: 
      - '*'
    tags:
      - v*
  pull_request:
  repository_dispatch:
    types: [run_build]
  workflow_dispatch: {}

jobs:
  build:
    name: ${{ matrix.target }} LARGE_MEMORY=${{ matrix.large_memory }} COMMAND_LIST=${{ matrix.command_list }} ADHOC=${{ matrix.adhoc }} SAVE_STATE=${{ matrix.save_state }} NO_GUI=${{ matrix.no_gui }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        target: [MVS, NCDZ] #TOOD: CPS1, CPS2
        large_memory: [OFF] #TODO: ON
        command_list: [OFF] #TODO: ON
        adhoc: [OFF] #TODO: ON
        save_state: [OFF] #TODO: OFF
        no_gui: [ON] #TODO: OFF
        exclude:
          - target: NCDZ
            adhoc: ON
          - adhoc: ON
            save_state: FALSE
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Install Ubuntu dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
          build-essential \
          git \
          wget \
          unzip \
          libbz2-dev \
          libsdl2-dev\
          libmad0-dev


    - name: Install Mac dependencies
      if: matrix.os == 'macOS-latest'
      run: |
        brew update
        brew install cmake sdl2 libzip mad

    - name: Compile project
      run: |
        mkdir build
        cd build
        cmake -DPLATFORM="X86_64" \
          -DTARGET="${{ matrix.target }}" \
          -DLARGE_MEMORY=${{ matrix.large_memory }} \
          -DCOMMAND_LIST=${{ matrix.command_list }} \
          -DADHOC=${{ matrix.adhoc }} \
          -DSAVE_STATE=${{ matrix.save_state }} \
          ..
        make -j $(getconf _NPROCESSORS_ONLN)

    - name: Get short SHA
      id: slug
      run: echo "sha8=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_OUTPUT

    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v4
      with:
        name: NJEMU-${{ steps.slug.outputs.sha8 }}-${{ matrix.os }}-${{ matrix.target }}-large_memory_${{ matrix.large_memory }}-command_list_${{ matrix.command_list }}-adhoc_${{ matrix.adhoc }}-save_state${{ matrix.save_state }}
        path: |
          build/${{ matrix.target }}